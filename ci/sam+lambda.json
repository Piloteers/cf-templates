{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Continuous Integration for project",
  "Parameters": {
      "ProjectName": {
          "Type": "String",
          "Description": "The name of the project being built.  This name will be used on a number of resources.",
          "Default": "MyAwesomeProject"
      },
      "ProjectParameterOverridesProduction": {
          "Type": "String",
          "Description": "JSON string for the parameters of the project template.",
          "Default": "{ Environment: \"Production\" }"
      },
      "ProjectParameterOverridesStaging": {
          "Type": "String",
          "Description": "JSON string for the parameters of the project template.",
          "Default": "{ Environment: \"Staging\" }"
      },
      "GitHubOAuthToken": {
          "Type": "AWS::SSM::Parameter::Value <String>",
          "Description": "GitHub oauth token.  This user must have admin access to the repo.",
          "Default": "****",          
          "NoEcho": true
      },
      "GitHubRepoOwner": {
          "Type": "String",
          "Description": "GitHub repo owner.",
          "Default": "mycompany"
      },
      "GitHubRepo": {
          "Type": "String",
          "Description": "GitHub git repo.",
          "Default": "myreponame"
      },
      "GitHubBranch": {
          "Type": "String",
          "Description": "Git branch to build off of.",
          "Default": "develop"
      }
  },
  "Resources": {
      "DeploymentArtifactBucket": {
          "Type": "AWS::S3::Bucket",
          "DeletionPolicy": "Delete",
          "Properties": {
              "AccessControl": "Private",
              "VersioningConfiguration": {
                  "Status": "Suspended"
              }
          }
      },
      "CodeBuildServiceRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
              "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                      {
                          "Effect": "Allow",
                          "Action": [
                              "sts:AssumeRole"
                          ],
                          "Principal": {
                              "Service": [
                                  "codebuild.amazonaws.com"
                              ]
                          }
                      }
                  ]
              }
          }
      },
      "CodeBuildServicePolicy": {
          "Type": "AWS::IAM::Policy",
          "Properties": {
              "PolicyName": "CodeBuildServicePolicy",
              "Roles": [
                  {
                      "Ref": "CodeBuildServiceRole"
                  }
              ],
              "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                      {
                          "Effect": "Allow",
                          "Action": [
                              "logs:CreateLogGroup",
                              "logs:CreateLogStream",
                              "logs:PutLogEvents"
                          ],
                          "Resource": "arn:aws:logs:*:*:*"
                      },
                      {
                          "Effect": "Allow",
                          "Action": [
                              "s3:GetObject",
                              "s3:GetObjectVersion",
                              "s3:PutObject"
                          ],
                          "Resource": [
                              {
                                  "Fn::Sub": "arn:aws:s3:::codepipeline-${AWS::Region}-*/*"
                              },
                              {
                                  "Fn::Sub": "arn:aws:s3:::${DeploymentArtifactBucket}/*"
                              }
                          ]
                      }
                  ]
              }
          }
      },
      "CodeBuildProject": {
          "Type": "AWS::CodeBuild::Project",
          "Properties": {
              "Name": {
                  "Ref": "ProjectName"
              },
              "ServiceRole": {
                  "Fn::GetAtt": [
                      "CodeBuildServiceRole",
                      "Arn"
                  ]
              },
              "Artifacts": {
                  "Type": "CODEPIPELINE"
              },
              "Environment": {
                  "Type": "linuxContainer",
                  "ComputeType": "BUILD_GENERAL1_SMALL",
                  "Image": "aws/codebuild/nodejs:7.0.0",
                  "EnvironmentVariables": [
                      {
                          "Name": "BUILD_ARTIFACT_BUCKET",
                          "Value": {
                              "Ref": "DeploymentArtifactBucket"
                          }
                      }
                  ]
              },
              "Source": {
                  "Type": "CODEPIPELINE"
              },
              "TimeoutInMinutes": 10
          }
      },
      "CodePipelineServiceRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
              "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                      {
                          "Effect": "Allow",
                          "Action": [
                              "sts:AssumeRole"
                          ],
                          "Principal": {
                              "Service": [
                                  "codepipeline.amazonaws.com"
                              ]
                          }
                      }
                  ]
              }
          }
      },
      "CodePipelineServicePolicy": {
          "Type": "AWS::IAM::Policy",
          "Properties": {
              "PolicyName": "CodePipelineServicePolicy",
              "Roles": [
                  {
                      "Ref": "CodePipelineServiceRole"
                  }
              ],
              "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                      {
                          "Effect": "Allow",
                          "Action": [
                              "logs:CreateLogGroup",
                              "logs:CreateLogStream",
                              "logs:PutLogEvents"
                          ],
                          "Resource": "arn:aws:logs:*:*:*"
                      },
                      {
                          "Effect": "Allow",
                          "Action": [
                              "s3:GetObject",
                              "s3:GetObjectVersion",
                              "s3:PutObject"
                          ],
                          "Resource": {
                              "Fn::Sub": "arn:aws:s3:::${DeploymentArtifactBucket}/*"
                          }
                      },
                      {
                          "Effect": "Allow",
                          "Action": [
                              "cloudformation:CreateStack",
                              "cloudformation:DescribeStacks",
                              "cloudformation:DeleteStack",
                              "cloudformation:UpdateStack",
                              "cloudformation:CreateChangeSet",
                              "cloudformation:ExecuteChangeSet",
                              "cloudformation:DeleteChangeSet",
                              "cloudformation:DescribeChangeSet",
                              "cloudformation:ValidateTemplate"
                          ],
                          "Resource": {
                              "Fn::Sub": "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ProjectName}/*"
                          }
                      },
                      {
                          "Effect": "Allow",
                          "Action": [
                              "codebuild:BatchGetBuilds",
                              "codebuild:StartBuild",
                              "codebuild:StopBuild"
                          ],
                          "Resource": {
                              "Fn::GetAtt": [
                                  "CodeBuildProject",
                                  "Arn"
                              ]
                          }
                      },
                      {
                          "Effect": "Allow",
                          "Action": [
                              "iam:PassRole"
                          ],
                          "Resource": {
                              "Fn::GetAtt": [
                                  "CloudFormationServiceRole",
                                  "Arn"
                              ]
                          }
                      }
                  ]
              }
          }
      },
      "CloudFormationServiceRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
              "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                      {
                          "Effect": "Allow",
                          "Action": [
                              "sts:AssumeRole"
                          ],
                          "Principal": {
                              "Service": [
                                  "cloudformation.amazonaws.com"
                              ]
                          }
                      }
                  ]
              }
          }
      },
      "CloudFormationServicePolicy": {
          "Type": "AWS::IAM::Policy",
          "Properties": {
              "PolicyName": "CloudFormationServicePolicy",
              "Roles": [
                  {
                      "Ref": "CloudFormationServiceRole"
                  }
              ],
              "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                      {
                          "Effect": "Allow",
                          "Action": [
                              "logs:CreateLogGroup",
                              "logs:CreateLogStream",
                              "logs:PutLogEvents"
                          ],
                          "Resource": "arn:aws:logs:*:*:*"
                      },
                      {
                          "Effect": "Allow",
                          "Action": [
                              "cloudformation:CreateChangeSet",
                              "cloudformation:ListChangeSets"
                          ],
                          "Resource": {
                              "Fn::Sub": "arn:aws:cloudformation:${AWS::Region}:aws:transform/*"
                          }
                      },
                      {
                          "Effect": "Allow",
                          "Action": [
                              "s3:GetObject"
                          ],
                          "Resource": [
                              {
                                  "Fn::Sub": "arn:aws:s3:::codepipeline-${AWS::Region}-*/*"
                              },
                              {
                                  "Fn::Sub": "arn:aws:s3:::${DeploymentArtifactBucket}/*"
                              }
                          ]
                      },
                      {
                          "Effect": "Allow",
                          "Action": [
                              "iam:AttachRolePolicy",
                              "iam:CreateRole",
                              "iam:DeleteRole",
                              "iam:DeleteRolePolicy",
                              "iam:DetachRolePolicy",
                              "iam:GetRole",
                              "iam:PassRole",
                              "iam:PutRolePolicy"
                          ],
                          "Resource": {
                              "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/${ProjectName}-*"
                          }
                      },
                      {
                          "Effect": "Allow",
                          "Action": [
                              "lambda:AddPermission",
                              "lambda:CreateFunction",
                              "lambda:DeleteFunction",
                              "lambda:GetFunction",
                              "lambda:GetFunctionConfiguration",
                              "lambda:InvokeFunction",
                              "lambda:RemovePermission",
                              "lambda:TagResource",
                              "lambda:UntagResource",
                              "lambda:UpdateFunctionCode",
                              "lambda:UpdateFunctionConfiguration"
                          ],
                          "Resource": {
                              "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${ProjectName}-*"
                          }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "lambda:CreateEventSourceMapping",
                          "lambda:DeleteEventSourceMapping",
                              "lambda:GetEventSourceMapping"
                            ],
                            "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "lambda:ListTags",
                          "lambda:TagResource",
                          "lambda:UntagResource"
                        ],
                        "Resource": "*"
                      },
                      {
                          "Effect": "Allow",
                          "Action": [
                            "apigateway:*"
                          ],
                          "Resource": {
                              "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:${AWS::AccountId}:/*"
                          }
                      },
                      {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:DescribeStreams",
                            "dynamodb:DescribeStream",
                            "dynamodb:ListStreams",
                            "dynamodb:GetShardIterator",
                            "dynamodb:GetRecords"
                          ],
                          "Resource": {
                              "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ProjectName}-*"
                          }
                      },
                      {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:CreateTable",
                            "dynamodb:DeleteTable",
                            "dynamodb:DescribeTable",
                            "dynamodb:DescribeTimeToLive",
                            "dynamodb:ListTagsOfResource",
                            "dynamodb:TagResource",
                            "dynamodb:UntagResource",
                            "dynamodb:UpdateTable",
                            "dynamodb:UpdateTimeToLive"
                          ],
                          "Resource": {
                              "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ProjectName}-*"
                          }
                      },
                      {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:ListTags",
                            "dynamodb:TagResource",
                            "dynamodb:UntagResource"
                          ],
                          "Resource": {
                              "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ProjectName}-*"
                          }
                      },
                      {
                          "Effect": "Allow",
                          "Action": [
                            "application-autoscaling:*"
                          ],
                          "Resource": {
                              "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ProjectName}-*"
                          }
                      },
                      {
                          "Effect": "Allow",
                          "Action": [
                            "s3:CreateBucket",
                            "s3:GetBucketAcl",
                            "s3:GetBucketNotification",
                            "s3:GetBucketTagging",
                            "s3:PutBucketAcl",
                            "s3:PutBucketNotification",
                            "s3:PutBucketTagging"
                          ],
                          "Resource": {
                              "Fn::Sub": "arn:aws:s3:::${ProjectName}-*"
                          }
                      }
                  ]
              }
          }
      },
      "CodePipeline": {
          "Type": "AWS::CodePipeline::Pipeline",
          "Properties": {
              "RoleArn": {
                  "Fn::GetAtt": [
                      "CodePipelineServiceRole",
                      "Arn"
                  ]
              },
              "Stages": [
                  {
                      "Name": "Source",
                      "Actions": [
                          {
                              "Name": "Source",
                              "ActionTypeId": {
                                  "Category": "Source",
                                  "Owner": "ThirdParty",
                                  "Version": 1,
                                  "Provider": "GitHub"
                              },
                              "OutputArtifacts": [
                                  {
                                      "Name": "SourceCodeOutputArtifact"
                                  }
                              ],
                              "Configuration": {
                                  "Owner": {
                                      "Ref": "GitHubRepoOwner"
                                  },
                                  "Repo": {
                                      "Ref": "GitHubRepo"
                                  },
                                  "Branch": {
                                      "Ref": "GitHubBranch"
                                  },
                                  "OAuthToken": {
                                      "Ref": "GitHubOAuthToken"
                                  }
                              },
                              "RunOrder": 1
                          }
                      ]
                  },
                  {
                      "Name": "Build",
                      "Actions": [
                          {
                              "Name": "CodeBuild",
                              "ActionTypeId": {
                                  "Category": "Build",
                                  "Owner": "AWS",
                                  "Version": 1,
                                  "Provider": "CodeBuild"
                              },
                              "InputArtifacts": [
                                  {
                                      "Name": "SourceCodeOutputArtifact"
                                  }
                              ],
                              "OutputArtifacts": [
                                  {
                                      "Name": "BuildOutputArtifact"
                                  }
                              ],
                              "Configuration": {
                                  "ProjectName": {
                                      "Ref": "ProjectName"
                                  }
                              },
                              "RunOrder": 1
                          }
                      ]
                  },
                  {
                      "Name": "DeployToStaging",
                      "Actions": [
                          {
                              "Name": "CreateChangeSet",
                              "ActionTypeId": {
                                  "Category": "Deploy",
                                  "Owner": "AWS",
                                  "Version": 1,
                                  "Provider": "CloudFormation"
                              },
                              "InputArtifacts": [
                                  {
                                      "Name": "BuildOutputArtifact"
                                  }
                              ],
                              "Configuration": {
                                  "ActionMode": "CHANGE_SET_REPLACE",
                                  "ChangeSetName": {
                                      "Fn:Join": [
                                        "-",
                                        { "Ref": "ProjectName" },
                                        "Staging"
                                      ]
                                      
                                  },
                                  "RoleArn": {
                                      "Fn::GetAtt": [
                                          "CloudFormationServiceRole",
                                          "Arn"
                                      ]
                                  },
                                  "Capabilities": "CAPABILITY_IAM",
                                  "StackName": [
                                    "-",
                                    { "Ref": "ProjectName" },
                                    "Staging"
                                  ],
                                  "ParameterOverrides": {
                                      "Ref": "ProjectParameterOverridesStaging"
                                  },
                                  "TemplatePath": "BuildOutputArtifact::SamDeploymentTemplate.json"
                              },
                              "RunOrder": 1
                          },
                          {
                              "Name": "ExecuteChangeSet",
                              "ActionTypeId": {
                                  "Category": "Deploy",
                                  "Owner": "AWS",
                                  "Version": 1,
                                  "Provider": "CloudFormation"
                              },
                              "Configuration": {
                                  "StackName": [
                                    "-",
                                    { "Ref": "ProjectName" },
                                    "Staging"
                                  ],
                                  "ActionMode": "CHANGE_SET_EXECUTE",
                                  "ChangeSetName": [
                                    "-",
                                    { "Ref": "ProjectName" },
                                    "Staging"
                                  ]
                              },
                              "RunOrder": 2
                          },
                          {
                            "Name": "ApprovalForRelease",
                            "ActionTypeId": {
                                "Category": "Approval",
                                "Owner": "AWS",
                                "Version": 1,
                                "Provider": "Manual"
                            },
                            "RunOrder": 3
                        }
                      ]
                  },
                  {
                      "Name": "Release",
                      "Actions": [
                          {
                              "Name": "CreateChangeSet",
                              "ActionTypeId": {
                                  "Category": "Deploy",
                                  "Owner": "AWS",
                                  "Version": 1,
                                  "Provider": "CloudFormation"
                              },
                              "InputArtifacts": [
                                  {
                                      "Name": "BuildOutputArtifact"
                                  }
                              ],
                              "Configuration": {
                                  "ActionMode": "CHANGE_SET_REPLACE",
                                  "ChangeSetName": [
                                    "-",
                                    { "Ref": "ProjectName" },
                                    "Production"
                                  ],
                                  "RoleArn": {
                                      "Fn::GetAtt": [
                                          "CloudFormationServiceRole",
                                          "Arn"
                                      ]
                                  },
                                  "Capabilities": "CAPABILITY_IAM",
                                  "StackName": [
                                    "-",
                                    { "Ref": "ProjectName" },
                                    "Production"
                                  ],
                                  "ParameterOverrides": {
                                      "Ref": "ProjectParameterOverridesProduction"
                                  },
                                  "TemplatePath": "BuildOutputArtifact::SamDeploymentTemplate.json"
                              },
                              "RunOrder": 1
                          },
                          {
                              "Name": "ExecuteChangeSet",
                              "ActionTypeId": {
                                  "Category": "Deploy",
                                  "Owner": "AWS",
                                  "Version": 1,
                                  "Provider": "CloudFormation"
                              },
                              "Configuration": {
                                  "StackName": {
                                      "Ref": "ProjectName"
                                  },
                                  "ActionMode": "CHANGE_SET_EXECUTE",
                                  "ChangeSetName": [
                                    "-",
                                    { "Ref": "ProjectName" },
                                    "Production"
                                  ]
                              },
                              "RunOrder": 2
                          }
                      ]
                  }
              ],
              "ArtifactStore": {
                  "Type": "S3",
                  "Location": {
                      "Ref": "DeploymentArtifactBucket"
                  }
              },
              "Name": {
                  "Ref": "ProjectName"
              }
          }
      }
  }
}